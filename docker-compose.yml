version: '3.7'

services:

  sounds:
    build:
      context: ./services/sounds
      dockerfile: Dockerfile
    volumes:
    - './services/sounds:/usr/src/app'
    ports:
      - 5001:5000
    environment:
      - FLASK_APP=project/__init__.py
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@sounds-db:5432/sounds_dev  # new
      - DATABASE_TEST_URL=postgres://postgres:postgres@sounds-db:5432/sounds_test  # new
    depends_on:  # new
      - sounds-db

  sounds-db:  # new
    build:
      context: ./services/sounds/project/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - sounds
      - client

  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - './services/client:/usr/src/app'
      - './services/client/node_modules/'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
    depends_on:
      - sounds

